name: Build and test PPP package

on:
  workflow_dispatch

env:
  ARTIFACTS_PATH: artifacts
  AWS_DEFAULT_REGION: eu-west-1
  ECR_REPO: pandas-polars-pyspark
  TF_DIR: terraform
  PACKAGE_NAME: ppp
  POETRY_VERSION: 1.4.2
  POETRY_CACHE_DIR: $CI_PROJECT_DIR/.cache/poetry
  PYTHON_VERSION: 3.10.12

permissions:
  id-token: write
  contents: write

jobs:
  build_terraform:
    name: Build terraform
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.AWS_WORKFLOW_ROLE }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.TF_DIR }}

      - name: Terraform validate
        run: terraform validate
        working-directory: ${{ env.TF_DIR }}

      - name: Terraform plan
        run: terraform plan
        working-directory: ${{ env.TF_DIR }}


      - name: Terraform apply
        run: terraform apply -auto-approve
        working-directory: ${{ env.TF_DIR }}


  build_package:
    name: Build package
    runs-on: ubuntu-latest
    needs: build_terraform

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install poetry
        run: |
          pip install poetry==$POETRY_VERSION
          poetry config cache-dir $POETRY_CACHE_DIR
          poetry install --no-root
          source `poetry env info --path`/bin/activate

      - name: Build wheel
        run: |
          pip install poetry==$POETRY_VERSION
          poetry build -f wheel
          mv dist/ $ARTIFACTS_PATH
          ls $ARTIFACTS_PATH

      - name: Upload wheel as artifact
        uses: actions/upload-artifact@master
        with:
          name:  ${{ env.PACKAGE_NAME }}-package
          path: "${{ env.ARTIFACTS_PATH }}/${{ env.PACKAGE_NAME }}-*.whl"

      - name: Build docker image
        env:
          ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
        run: |
          docker build -t ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPO} .

      - name: Push docker image
        env:
          ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
        run: |
          aws ecr get-login-password \
              --region ${REGION} \
          | docker login \
              --username AWS \
              --password-stdin ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com

          docker push ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPO}
