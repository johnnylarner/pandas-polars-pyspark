name: Deploy my package

on:
  push:
    branches:
      - "main"
      - "features/**"
      - "improvements/**"
      - "bug-fixes/**"

env:
  PACKAGE_NAME: ppp
  ARTIFACTS_PATH: artifacts
  PYTHON_VERSION: 3.10.12
  POETRY_VERSION: 1.4.2
  POETRY_CACHE_DIR: $CI_PROJECT_DIR/.cache/poetry

jobs:
  build:
    name: Build package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install poetry
        run: |
          pip install poetry==$POETRY_VERSION
          poetry config cache-dir $POETRY_CACHE_DIR
          poetry install --no-root
          source `poetry env info --path`/bin/activate

      - name: Run hooks
        run: |
            poetry run pre-commit run --all-files

      - name: Build wheel
        run: |
          pip install poetry==$POETRY_VERSION
          poetry build -f wheel
          mv dist/ $ARTIFACTS_PATH
          ls $ARTIFACTS_PATH

      - name: Upload wheel as artifact
        uses: actions/upload-artifact@master
        with:
          name:  ${{ env.PACKAGE_NAME }}-package
          path: "${{ env.ARTIFACTS_PATH }}/${{ env.PACKAGE_NAME }}-*.whl"

  test-unit:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3
      - name: Download wheel package
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.PACKAGE_NAME }}-package
          path: dist/
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Run unit tests
        run: |
          pip install poetry==$POETRY_VERSION
          poetry install --no-root
          poetry run pytest tests
